---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import { db, Meals } from "astro:db";
import { like, or } from "drizzle-orm";
import { getISOWeek } from "date-fns";

interface Meal {
  name: string;
  meal_type: string;
  day?: Date;
  macrofactor_url?: string | null;
  notes?: string | null;
  week?: string | null;
  dayOfWeek?: string | null;
}

const now = new Date();
const currentWeekNumber = getISOWeek(now).toString();
const nextWeekNumber = getISOWeek(now) + 1;
const nextWeekNumberString = nextWeekNumber.toString();
console.log(nextWeekNumber);

const meals = await db
  .select()
  .from(Meals)
  .where(
    or(
      like(Meals.week, `%${currentWeekNumber}`),
      like(Meals.week, `%${nextWeekNumberString}`)
    )
  );

const hasData = meals.length > 0;

// Group meals by dayOfWeek
const mealsByDayOfWeek: Record<string, Meal[]> = meals.reduce(
  (acc: Record<string, Meal[]>, meal: Meal) => {
    const dayOfWeek = meal.dayOfWeek;
    if (!acc[dayOfWeek]) {
      acc[dayOfWeek] = [];
    }
    acc[dayOfWeek].push(meal);
    return acc;
  },
  {}
);
---

<DefaultLayout title="Home Page">
  {
    !hasData ? (
      <p>No food this week LOLSORRY</p>
    ) : (
      <>
        <h1>This week's menu</h1>
        {Object.entries(mealsByDayOfWeek).map(([day, dayMeals]) => {
          return (
            <section class="day">
              <h2>{day}</h2>
              <div class="meals">
                {dayMeals.map(({ name, meal_type, notes, macrofactor_url }) => (
                  <div>
                    <h3>{meal_type}</h3>
                    <h4>{name}</h4>
                    <div class="food-list">
                      {macrofactor_url && (
                        <a href={macrofactor_url}>MacroFactor link</a>
                      )}
                      {notes && <p>{notes}</p>}
                    </div>
                  </div>
                ))}
              </div>
            </section>
            <hr />
          );
        })}
      </>
    )
  }
</DefaultLayout>
